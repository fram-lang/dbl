import open Width

rec
  pub data Doc = { tree : DocTree, width : Width }

  pub let doc tree width = Doc { tree, width }

  pub data DocTree =
    | DEmpty
    | DStr    of String
    | DShift  of Doc
    | DReset  of Doc
    | DSeq    of List Doc
    | DStack  of List Doc
    | DLayout of Int, Doc
    | DColor  of Color, Doc
    | DBox    of Doc
    | DFlex   of Int
    | DExtra  of {type X}, X, (Int -> Int -> X ->> CtxBox)

  pub data CtxBox = { lines : List Line
                    , fill  : Line 
                    , size  : Int 
                    }

  pub let ctxBox lines fill size = CtxBox { lines, fill, size }

  pub data Color =
    | Black
    | Red
    | Green
    | Yellow
    | Blue
    | Magenta
    | Cyan
    | White

  pub data Line =
    | LStr   of String
    | LChr   of Char
    | LConc  of Line, Line
    | LFill  of Int,  String
    | LEmpty
    | LColor of Color
    | LColorPop
end

