
{# This file is part of DBL, released under MIT license.
 # See LICENSE for details.
 #}

import open /Base/Types
import open /Base/String
import open /Base/Operators

pub method toString
  { type X, method toString : X ->> String
  , type Y, method toString : Y ->> String } 
  (self : Either X Y) =
    match self with
    | Left x  => "Left "  + x.toString
    | Right y => "Right " + y.toString
    end

pub method format
  { type X, method format : X -> Option Unit ->> String
  , type Y, method format : Y -> Option Unit ->> String } 
  (self : Either X Y)
  (fmt : Option Unit) =
    match self with
    | Left x  => "Left "  + x.format None
    | Right y => "Right " + y.format None
    end
