{# This file is part of DBL, released under MIT license.
 # See LICENSE for details.
 #}

import open Types
import open Operators
import open Assert

pub method toString = (extern dbl_intToString : Int -> String)
pub method toInt64  = (extern dbl_intToInt64 : Int -> Int64)

pub method equal = (extern dbl_eqInt  : Int -> Int -> Bool)
pub method neq   = (extern dbl_neqInt : Int -> Int -> Bool)
pub method gt    = (extern dbl_gtInt  : Int -> Int -> Bool)
pub method lt    = (extern dbl_ltInt  : Int -> Int -> Bool)
pub method ge    = (extern dbl_geInt  : Int -> Int -> Bool)
pub method le    = (extern dbl_leInt  : Int -> Int -> Bool)

pub method add = (extern dbl_addInt : Int -> Int -> Int)
pub method sub = (extern dbl_subInt : Int -> Int -> Int)
pub method mul = (extern dbl_mulInt : Int -> Int -> Int)

pub method div (self : Int) (n : Int) =
  assert {msg="Division by zero"} (n != 0);
  (extern dbl_divInt : Int -> Int -> Int) self n

pub method mod (self : Int) (n : Int) =
  assert {msg="Division by zero"} (n != 0);
  (extern dbl_modInt : Int -> Int -> Int) self n

pub method neg (self : Int) = 0 - self

pub method land = (extern dbl_andInt : Int -> Int -> Int)
pub method lor  = (extern dbl_orInt  : Int -> Int -> Int)
pub method lxor = (extern dbl_xorInt : Int -> Int -> Int)

pub method shiftl  = (extern dbl_lslInt : Int -> Int -> Int)
pub method shiftr  = (extern dbl_lsrInt : Int -> Int -> Int)
pub method ashiftr = (extern dbl_asrInt : Int -> Int -> Int)

pub let maxValue = (extern dbl_maxInt : Int)
pub let minValue = (extern dbl_minInt : Int)
