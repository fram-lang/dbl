
{# This file is part of DBL, released under MIT license.
 # See LICENSE for details.
 #}

import open /Base/Types
import open /Base/String
import open /Base/Operators

pub method toString 
  { type X, method toString : X ->> String }
  (self : List X) =
  let rec iter (xs : List X) =
    match xs with
    | [] => "]"
    | [x] => x.toString + "]"
    | x :: xs => x.toString + ", " + iter xs
    end in
  "[" + iter self

pub method format
  { type X, method format : X -> Option Unit ->> String }
  (self : List X) 
  (fmt : Option Unit) =
  let rec iter (xs : List X) =
    match xs with
    | [] => "]"
    | [x] => x.format None + "]"
    | x :: xs => x.format None + ", " + iter xs
    end in
  "[" + iter self
