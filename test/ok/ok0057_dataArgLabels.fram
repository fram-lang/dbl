data Unit = I

data State E (type T) = State of
  { get    : Unit ->[E] T
  , put    : T ->[E] Unit
  , update : {F} -> (T ->[E,F] T) ->[E,F] Unit
  }

let hState s =
  handler
    let get I = effect / r => fn s => r s s
    let put s = effect / r => fn s => r I s
    let update f = put (f (get I))
    in
    State { get, put, update }
  return  x => fn _ => x
  finally f => f s
  end
